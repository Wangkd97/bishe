<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ysu.tour.dao.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.ysu.tour.pojo.Category" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="s_id" property="sId" jdbcType="INTEGER" />
    <result column="s_time" property="sTime" jdbcType="VARCHAR" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="s_cover" property="sCover" jdbcType="VARCHAR" />
    <result column="s_text" property="sText" jdbcType="VARCHAR" />
    <result column="s_day" property="sDay" jdbcType="INTEGER" />
    <result column="s_pay" property="sPay" jdbcType="INTEGER" />
    <result column="s_status" property="sStatus" jdbcType="INTEGER" />
    <result column="s_com_num" property="sComNum" jdbcType="INTEGER" />
    <result column="s_cli_num" property="sCliNum" jdbcType="INTEGER" />
    <result column="s_look_num" property="sLookNum" jdbcType="INTEGER" />
    <result column="s_pic_id" property="sPicId" jdbcType="INTEGER" />
    <result column="s_people_id" property="sPeopleId" jdbcType="INTEGER" />
    <result column="s_play_id" property="sPlayId" jdbcType="INTEGER" />
    <result column="s_season_id" property="sSeasonId" jdbcType="INTEGER" />
    <result column="s_gotime" property="sGotime" jdbcType="VARCHAR"/>
    <result column="s_master_id" property="sMasterId" jdbcType="INTEGER"></result>
    <result column="s_active_num" property="sActiveNum" jdbcType="INTEGER"></result>
  </resultMap>
  <resultMap id="SysStrategy" type="com.ysu.tour.viewobject.SysStrategyVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="s_id" property="sId" jdbcType="INTEGER" />
    <result column="s_time" property="sTime" jdbcType="VARCHAR" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_email" property="uEmail" jdbcType="VARCHAR" />
    <result column="s_status" property="sStatus" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from strategy_table
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true"
          keyProperty="sId" parameterType="com.ysu.tour.pojo.Category" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into strategy_table (s_id, s_time, s_name, 
      s_cover, s_text, s_day, 
      s_pay, s_status, s_com_num, 
      s_cli_num, s_look_num, s_pic_id, 
      s_people_id, s_play_id, s_season_id,s_gotime,s_master_id
      )
    values (#{sId,jdbcType=INTEGER}, #{sTime,jdbcType=VARCHAR}, #{sName,jdbcType=VARCHAR}, 
      #{sCover,jdbcType=VARCHAR}, #{sText,jdbcType=VARCHAR}, #{sDay,jdbcType=INTEGER}, 
      #{sPay,jdbcType=INTEGER}, #{sStatus,jdbcType=INTEGER}, #{sComNum,jdbcType=INTEGER}, 
      #{sCliNum,jdbcType=INTEGER}, #{sLookNum,jdbcType=INTEGER}, #{sPicId,jdbcType=INTEGER}, 
      #{sPeopleId,jdbcType=INTEGER}, #{sPlayId,jdbcType=INTEGER}, #{sSeasonId,jdbcType=INTEGER},
      #{sGotime,jdbcType=VARCHAR},#{sMasterId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ysu.tour.pojo.Category" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update strategy_table
    set s_time = #{sTime,jdbcType=VARCHAR},
      s_name = #{sName,jdbcType=VARCHAR},
      s_cover = #{sCover,jdbcType=VARCHAR},
      s_text = #{sText,jdbcType=VARCHAR},
      s_day = #{sDay,jdbcType=INTEGER},
      s_pay = #{sPay,jdbcType=INTEGER},
      s_status = #{sStatus,jdbcType=INTEGER},
      s_com_num = #{sComNum,jdbcType=INTEGER},
      s_cli_num = #{sCliNum,jdbcType=INTEGER},
      s_look_num = #{sLookNum,jdbcType=INTEGER},
      s_pic_id = #{sPicId,jdbcType=INTEGER},
      s_people_id = #{sPeopleId,jdbcType=INTEGER},
      s_play_id = #{sPlayId,jdbcType=INTEGER},
      s_season_id = #{sSeasonId,jdbcType=INTEGER}
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select s_id, s_time, s_name, s_cover, s_text, s_day, s_pay, s_status, s_com_num, 
    s_cli_num, s_look_num, s_pic_id, s_people_id, s_play_id, s_season_id,s_gotime,s_master_id
    from strategy_table
    where s_id = #{sId,jdbcType=INTEGER}
  </select>
  <select id="selectAllselectMainInfo" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select s_id, s_time, s_name, s_cover, s_text, s_day, s_pay, s_status, s_com_num,
    s_cli_num, s_look_num, s_pic_id, s_people_id, s_play_id, s_season_id,s_gotime,s_master_id
    from strategy_table

  </select>
  <select id="selectAll" resultMap="BaseResultMap" >

  select * from strategy_table

  </select>

  <select id="fenyeselect" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select s_id,s_time,s_name,s_cover,s_day,s_pay,s_com_num,s_cli_num,s_look_num,s_people_id,s_play_id,s_season_id,s_gotime,s_master_id
    from strategy_table where s_status=1  ORDER BY s_time	DESC limit #{start},10
  </select>

  <select id="selectcountall" resultType="java.lang.Integer">
     select count(*)
    from strategy_table where s_status=1
  </select>
  <select id="fenleiselect" resultMap="BaseResultMap" parameterType="map">
        select s_gotime,s_cover,strategy_table.s_id,s_name,s_pay,s_day,s_look_num,s_cli_num ,strategy_table.s_play_id,strategy_table.s_people_id,strategy_table.s_season_id , s_master_id
    from season_table inner join strategy_table  on season_table.season_id=strategy_table.s_season_id inner join people_table
    on people_table.peo_id= strategy_table.s_people_id inner join play_name on
    strategy_table.s_play_id = play_name.play_id where s_status=1
    <if test="month==0">

    </if>
    <if test="month==1">
      and s_pic_id &gt;=1 and s_pic_id &lt;=3
     </if>
    <if test="month==2">
      and s_pic_id &gt;=4 and s_pic_id &lt;=6
    </if>
    <if test="month==3">
      and s_pic_id &gt;=7 and s_pic_id &lt;=9
    </if>
    <if test="month==4">
      and s_pic_id &gt;=10 and s_pic_id &lt;=12
    </if>
    <if test="day==0">

    </if>
    <if test="day==1">
      and s_day &gt;=1 and s_day &lt;=3
    </if>
    <if test="day==2">
      and s_day &gt;=4 and s_day &lt;=7
    </if>
    <if test="day==3">
      and s_day &gt;=8 and s_day &lt;=10
    </if>
    <if test="day==4">
      and s_day &gt;=11 and s_day &lt;=15
    </if>
    <if test="day==5">
      and s_day &gt;=15
    </if>
    <if test="pay==0">

    </if>
    <if test="pay==1">
    and s_pay &gt;=1 and s_pay &lt;=999
  </if>
    <if test="pay==2">
      and s_pay &gt;=1000 and s_pay &lt;=2999
    </if>
    <if test="pay==3">
      and s_pay &gt;=3000 and s_pay &lt;=4999
    </if>
    <if test="pay==4">
      and s_pay &gt;=5000 and s_pay &lt;=9999
    </if>
    <if test="pay==5">
      and s_pay &gt;=10000
    </if>

    <if test="people!=null and people!=''and people!=-1">
      and s_people_id=#{people}
    </if>
    <if test="play!=null and play!='' and play!=-1">
      and s_play_id=#{play}
    </if>
    ORDER BY s_time	DESC limit #{start},10

  </select>
  <select id="fuzzyselect" resultMap="BaseResultMap" parameterType="map">
  select s_id,s_time,s_name,s_cover,s_day,s_pay,s_com_num,s_cli_num,s_look_num,s_people_id,s_play_id,s_season_id,s_gotime,s_master_id
  from strategy_table where s_status=1 and s_name like #{name} ORDER BY s_time	DESC limit #{start},10

</select>
  <select id="countfuzzyall" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*)
    from strategy_table where s_status=1 and s_name like #{name}

  </select>
  <select id="countfenleiall" resultType="java.lang.Integer" parameterType="map">
    select count(*)
    from strategy_table where s_status=1
    <if test="month==0">

  </if>
    <if test="month==1">
      and s_pic_id &gt;=1 and s_pic_id &lt;=3
    </if>
    <if test="month==2">
      and s_pic_id &gt;=4 and s_pic_id &lt;=6
    </if>
    <if test="month==3">
      and s_pic_id &gt;=7 and s_pic_id &lt;=9
    </if>
    <if test="month==4">
      and s_pic_id &gt;=10 and s_pic_id &lt;=12
    </if>
    <if test="day==0">

    </if>
    <if test="day==1">
      and s_day &gt;=1 and s_day &lt;=3
    </if>
    <if test="day==2">
      and s_day &gt;=4 and s_day &lt;=7
    </if>
    <if test="day==3">
      and s_day &gt;=8 and s_day &lt;=10
    </if>
    <if test="day==4">
      and s_day &gt;=11 and s_day &lt;=15
    </if>
    <if test="day==5">
      and s_day &gt;=15
    </if>
    <if test="pay==0">

    </if>
    <if test="pay==1">
      and s_pay &gt;=1 and s_pay &lt;=999
    </if>
    <if test="pay==2">
      and s_pay &gt;=1000 and s_pay &lt;=2999
    </if>
    <if test="pay==3">
      and s_pay &gt;=3000 and s_pay &lt;=4999
    </if>
    <if test="pay==4">
      and s_pay &gt;=5000 and s_pay &lt;=9999
    </if>
    <if test="pay==5">
      and s_pay &gt;=10000
    </if>

    <if test="people!=null and people!='' and people!=-1">
      and s_people_id=#{people}
    </if>
    <if test="play!=null and play!='' and play!=-1">
      and s_play_id=#{play}
    </if>

  </select>
  <insert id="insertPlay"    parameterType="map">

    insert into strategy_play_table (strategy_id,play_id) values(#{strategyId},#{playId})
  </insert>
  <select id="selectAllByUserId" parameterType="map" resultMap="BaseResultMap">
  select  s_id,s_time,s_name,s_status,s_cover,s_day,s_pay,s_com_num,s_cli_num,s_look_num,s_people_id,s_play_id,s_season_id,s_gotime,s_master_id
  from strategy_table where s_status!=2 and  s_master_id=#{userId} limit #{start},10

</select>
  <select id="selectcountallByUser" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*)  from strategy_table where s_status!=2 and  s_master_id=#{userId}
  </select>
  <select id="selectDoByUserId" parameterType="map" resultMap="BaseResultMap">
    select  s_id,s_time,s_name,s_status,s_cover,s_day,s_pay,s_com_num,s_cli_num,s_look_num,s_people_id,s_play_id,s_season_id,s_gotime,s_master_id
    from strategy_table where s_master_id=#{userId} and s_status=1 limit #{start},10

  </select>
  <select id="selectcountallIfDoByUser" resultType="java.lang.Integer" parameterType="map">
    select count(*)  from strategy_table where s_master_id=#{userId} and s_status=#{status}
  </select>
  <select id="selectUnDoByUserId" parameterType="map" resultMap="BaseResultMap">
    select  s_id,s_time,s_name,s_status,s_cover,s_day,s_pay,s_com_num,s_cli_num,s_look_num,s_people_id,s_play_id,s_season_id,s_gotime,s_master_id
    from strategy_table where s_master_id=#{userId} and s_status=0 limit #{start},10

  </select>
  <update id="updateStatus"  parameterType="java.lang.Integer" >

    update strategy_table set s_status =2 where s_id=#{strategyId}
  </update>
  <update id="updateStrategy" parameterType="map">
    update strategy_table
    <trim prefix="set" suffixOverrides=",">
      <if test="sTime!=null">s_time=#{sTime}, </if>
      <if test="sName!=null">s_name=#{sName},</if>
      <if test="sCover!=null">s_cover=#{sCover},</if>
      <if test="sText!=null">s_text=#{sText},</if>
      <if test="sDay!=null">s_day=#{sDay},</if>
      <if test="sPay!=null">s_pay=#{sPay},</if>
      <if test="sPeopleId!=null">s_people_id=#{sPeopleId},</if>
      <if test="sPlayId!=null">s_play_id=#{sPlayId},</if>
      <if test="sSeasonId!=null">s_season_id=#{sSeasonId},</if>
      <if test="sGotime!=null">s_gotime=#{sGotime},</if>
      s_status=0
    </trim>
      where s_id=#{sId}

  </update>

  <update id="updateStrategyPlay" parameterType="map">
    update strategy_play_table set play_id=#{playId}
    where strategy_id = #{strategyId} and play_id=#{oldPlayId}
  </update>

  <update id="updateLookNum" parameterType="java.lang.Integer">
    update strategy_table set s_look_num = s_look_num+1 where s_id=#{sId}

  </update>
  <update id="updateClickNum" parameterType="java.lang.Integer">
   update strategy_table set s_cli_num = s_cli_num+1 where s_id= #{sId}

  </update>

  <update id="substractCommentNum" parameterType="java.lang.Integer">
   update strategy_table set s_com_num = s_com_num-1 where s_id=#{sId}

  </update>
  <update id="substractLookNum" parameterType="java.lang.Integer">
    update strategy_table set s_look_num = s_look_num-1 where s_id=#{sId}

  </update>
  <update id="substractClickNum" parameterType="java.lang.Integer">
    update strategy_table set s_cli_num = s_cli_num-1 where s_id= #{sId}

  </update>

  <update id="updateCommentNum" parameterType="java.lang.Integer">
    update strategy_table set s_com_num = s_com_num+1 where s_id=#{sId}

  </update>

  <select id="selectMasterBysId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select s_master_id from strategy_table where s_id=#{sId}
  </select>

  <select id="selectActiveBysId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select s_active_num from strategy_table where s_id=#{sId}
  </select>
  <update id="updateActiveNum" parameterType="map">
    update strategy_table set s_active_num=#{sActiveNum} where s_id=#{sId}

  </update>

  <select id="selectAllToActive" resultMap="BaseResultMap">
      select s_time,s_id,s_cli_num,s_com_num,s_look_num,s_active_num
        from strategy_table where s_status=1 and s_active_num !=0
  </select>

  <select id="selectActiveTopFive" resultMap="BaseResultMap">
    select s_id,s_master_id,s_cover,s_time,s_com_num,s_cli_num,s_active_num from strategy_table where s_status=1
     ORDER BY s_active_num  desc ,s_cli_num desc limit 0,5
  </select>

  <!--以下是管理员-->
  <select id="sysSelectAll"  parameterType="java.lang.Integer" resultMap="SysStrategy">
    select s_time ,s_id, u_id,u_email ,s_name ,s_status from strategy_table inner join user_table
      where s_master_id=u_id and s_status!=2  ORDER BY s_time DESC limit #{start},10
  </select>
  <select id="sysSelectAllCount" resultType="java.lang.Integer" >
    select count(*)from strategy_table  where s_status=1 or s_status=0
  </select>
  <update id="sysUpdateStatus" parameterType="java.lang.Integer">
    update strategy_table set s_status =1 where s_id=#{strategyId}
  </update>

  <select id="sysSelectIfNot" parameterType="map" resultMap="SysStrategy">
     select s_time ,s_id, u_id,u_email ,s_name ,s_status from strategy_table inner join user_table
      where s_master_id=u_id and s_status =#{status}  ORDER BY s_time DESC limit #{start},10
  </select>

  <select id="sysSelectIfNotCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     select count(*)from strategy_table  where s_status=#{status}
  </select>

  <select id="sysFuzzySelect" resultMap="SysStrategy" parameterType="map">
    select s_time ,s_id, u_id,u_email ,s_name ,s_status from strategy_table inner join user_table
      where s_master_id=u_id and s_status=#{status} and s_name like #{name} ORDER BY s_time	DESC limit #{start},10

  </select>
  <select id="syscountfuzzyall" resultType="java.lang.Integer" parameterType="map">
    select count(*)
    from strategy_table where s_status=#{status} and s_name like #{name}

  </select>

  <select id="sysselectActiveTopTen" resultMap="BaseResultMap">
    select s_id,s_master_id,s_name,s_time,s_com_num,s_cli_num,s_active_num from strategy_table where s_status=1
     ORDER BY s_active_num  desc ,s_cli_num desc limit 0,10
  </select>
</mapper>